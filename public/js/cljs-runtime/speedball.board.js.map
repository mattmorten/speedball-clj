{"version":3,"sources":["speedball/board.cljs"],"mappings":"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","names":["malli.instrument.instrument_BANG_","malli.core.function_schemas","speedball.board/board-size","speedball.board/center","vec__26324","cljs.core.nth","board-x","board-y","center-x","Math/floor","center-y","malli.core._register_function_schema_BANG_","speedball.core/Position","cljs.core/identity","speedball.board/player-tile","i","speedball.board/player-tile-holding-ball","speedball.board/is-empty?","tile","cljs.core._EQ_","speedball.board/is-goal-tile?","speedball.board/first-row?","speedball.board/last-row?","cljs.core/first","speedball.board/first-col?","speedball.board/last-col?","cljs.core/second","speedball.board/goal-col?","speedball.board/generate-walls","cljs.core/vec","iter__5480__auto__","s__26335","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__26337","cljs.core/chunk-buffer","i__26336","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__26334","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","cljs.core.range","s__26343","b__26345","i__26344","iter__26342","s__26348","b__26350","i__26349","iter__26347","j","speedball.board/Tile","speedball.board/Row","speedball.board/Board","speedball.board/generate-board","speedball.board/tile-at","board","position","vec__26367","position-y","position-x","cljs.core.get","speedball.board/empty-at?","speedball.board/valid-position?","player-position","cljs.core/chunk-first"],"sourcesContent":["(ns speedball.board\n  (:require\n    [speedball.core :as core]\n    [malli.core :as mc]\n    [malli.instrument :as mi]))\n\n(mi/instrument!)\n(mc/function-schemas)\n\n(def board-size [60 80])\n\n(defn center []\n  (let [[board-x board-y] board-size\n        center-x (-> board-x (/ 2) Math/floor int)\n        center-y (-> board-y (/ 2) Math/floor int)]\n    [center-x center-y]))\n(mc/=> center [:=> [:cat] core/Position])\n\n\n(defn player-tile [i]\n  (nth [:1 :2 :3 :4 :5] i))\n(defn player-tile-holding-ball [i]\n  (nth [:! :& :# :$ :%] i))\n\n(defn is-empty? [tile]\n  (or (= tile :.)\n      (= tile :*)))\n\n(defn is-goal-tile? [tile]\n  (= tile :*))\n\n(defn first-row? [i] (= i 0))\n(defn last-row? [i] (= i (-> board-size first dec)))\n(defn first-col? [i] (= i 0))\n(defn last-col? [i] (= i (-> board-size second dec)))\n(defn goal-col? [i]\n  (or (= i (-> board-size second (/ 2) dec))\n      (= i (-> board-size second (/ 2)))))\n\n(defn generate-walls []\n  (vec (for [i (range (first board-size))]\n         (vec (for [j (range (second board-size))]\n                (cond\n                  (and (first-row? i) (goal-col? j)) :*\n                  (and (last-row? i) (goal-col? j)) :*\n                  (first-row? i) :n\n                  (last-row? i) :s\n                  (first-col? j) :e\n                  (last-col? j) :w\n                  :else :.))))))\n\n(def Tile [:keyword])\n(def Row [:vector Tile])\n(def Board [:vector Row])\n\n(defn generate-board []\n  (generate-walls))\n(mc/=> generate-board [:=> [:cat] Board])\n\n\n(defn tile-at [board position]\n  (let [[position-y position-x] position]\n    (-> board (get position-y) (get position-x))))\n(mc/=> tile-at [:=> [:cat Board core/Position] [:maybe Tile]])\n\n(defn empty-at? [board position]\n  (is-empty? (tile-at board position)))\n(mc/=> empty-at? [:=> [:cat Board core/Position] :boolean])\n\n(defn valid-position? [player-position board]\n  (empty-at? board player-position))\n(mc/=> valid-position? [:=> [:cat core/Position Board] :boolean])\n"]}